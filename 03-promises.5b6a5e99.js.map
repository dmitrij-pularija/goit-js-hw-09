{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAa,C,SAAEL,E,MAAUC,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACvBN,EACFK,EAAQF,GAERG,EAAOH,EAAW,G,CATXI,SAASC,cAAc,SAqC/BC,iBAAiB,UAvBtB,SAAgBC,GACdA,EAAMC,iBAEN,IAAIZ,EAAQa,OAAOF,EAAMG,cAAcd,MAAMe,OAC7C,MAAMC,EAAOH,OAAOF,EAAMG,cAAcE,KAAKD,OACvCE,EAASJ,OAAOF,EAAMG,cAAcG,OAAOF,OAEjD,IAAK,IAAIhB,EAAW,EAAGA,GAAYkB,EAAQlB,GAAY,EACrDD,EAAcC,EAAUC,GACrBkB,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAuB,OAAOC,QAAQ,uBAAuBrB,QAAeC,MAAW,CAC9DqB,SAAS,GACT,IAEHC,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAuB,OAAOI,QAAQ,sBAAsBxB,QAAeC,MAAW,CAC7DqB,SAAS,GACT,IAGNrB,GAASgB,C","sources":["js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst form = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objPromise = { position, delay };\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objPromise);\n    } else {\n      reject(objPromise);\n    }\n  });\n}\n\nfunction submit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          useIcon: false,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          useIcon: false,\n        });\n      });\n\n    delay += step;\n  }\n}\nform.addEventListener(\"submit\", submit);\n"],"names":["$9EgcF","parcelRequire","$951aad0a0e72398d$var$createPromise","position","delay","shouldResolve","Math","random","objPromise","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","Number","currentTarget","value","step","amount","then","Notify","success","useIcon","catch","failure"],"version":3,"file":"03-promises.5b6a5e99.js.map"}